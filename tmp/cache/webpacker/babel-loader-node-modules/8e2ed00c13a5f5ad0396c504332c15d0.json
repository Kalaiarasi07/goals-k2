{"ast":null,"code":"import Axios from \"axios\"; // API call to logout current user and go back to home page\n\nexport function logout() {\n  Axios.post('/api/logout').then(function (resp) {\n    console.log(resp.data.status);\n    window.location.assign('/');\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n} // Convert date object to string in 'Y/M/D' format\n\nexport function get_date_string(dateObj) {\n  var month = dateObj.getMonth() + 1;\n  var day = dateObj.getDate();\n  var year = dateObj.getFullYear();\n  return [year, month, day].join('/');\n} //validate username\n\nexport var validate_name = function validate_name(name) {\n  var error; // alphanumeric with both cases\n\n  var name_regex = /^[a-z0-9]+$/i;\n\n  if (!name) {\n    error = \"Name required!\";\n  } else if (!name_regex.test(name)) {\n    error = \"Name must be alphanumeric!\";\n  }\n\n  return error;\n}; //validate email\n\nexport var validate_email = function validate_email(email) {\n  var error;\n  var email_regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  if (!email) {\n    error = \"Email required!\";\n  } else if (!email_regex.test(email)) {\n    error = \"Provide valid email!\";\n  }\n\n  return error;\n}; //validate password\n\nexport var validate_password = function validate_password(password) {\n  var error; // Minimum four characters, at least one letter and one number\n\n  var password_regex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{4,}$/;\n\n  if (!password) {\n    error = \"Password required!\";\n  } else if (!password_regex.test(password)) {\n    error = \"Invalid password. Provide a minimum four characters with at least one letter and one number!\";\n  }\n\n  return error;\n}; //validate phone\n\nexport var validate_phone = function validate_phone(phone) {\n  var error; // Indian number starting from 6-9\n\n  var phone_regex = /^[6-9]\\d{9}$/;\n\n  if (!phone) {\n    error = \"Phone required!\";\n  } else if (!phone_regex.test(phone)) {\n    error = \"Provide a valid mobile number!\";\n  }\n\n  return error;\n}; //validate usertype\n\nexport var validate_user_type = function validate_user_type(user_type) {\n  var error;\n\n  if (!user_type) {\n    error = \"User type required!\";\n  }\n\n  return error;\n};","map":{"version":3,"names":["Axios","logout","post","then","resp","console","log","data","status","window","location","assign","err","get_date_string","dateObj","month","getMonth","day","getDate","year","getFullYear","join","validate_name","name","error","name_regex","test","validate_email","email","email_regex","validate_password","password","password_regex","validate_phone","phone","phone_regex","validate_user_type","user_type"],"sources":["/home/user/MP/rrapp/app/javascript/components/shared/functions.js"],"sourcesContent":["import Axios from \"axios\";\n\n// API call to logout current user and go back to home page\nexport function logout() {\n  Axios.post('/api/logout')\n    .then(resp => {\n      console.log(resp.data.status)\n      window.location.assign('/')\n    })\n    .catch(err => {\n      console.log(err)\n    })\n}\n\n// Convert date object to string in 'Y/M/D' format\nexport function get_date_string(dateObj) {\n\n  var month = dateObj.getMonth() + 1;\n  var day = dateObj.getDate();\n  var year = dateObj.getFullYear();\n\n  return [year, month, day].join('/');\n}\n\n//validate username\nexport const validate_name = (name) => {\n  let error;\n  // alphanumeric with both cases\n  const name_regex = /^[a-z0-9]+$/i;\n  if (!name) {\n    error = \"Name required!\";\n  } else if (!name_regex.test(name)) {\n    error = \"Name must be alphanumeric!\";\n  }\n  return error;\n}\n//validate email\nexport const validate_email = (email) => {\n  let error;\n  const email_regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n  if (!email) {\n    error = \"Email required!\"\n  } else if (!email_regex.test(email)) {\n    error = \"Provide valid email!\"\n  }\n  return error;\n}\n//validate password\nexport const validate_password = (password) => {\n  let error;\n  // Minimum four characters, at least one letter and one number\n  const password_regex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{4,}$/\n  if (!password) {\n    error = \"Password required!\"\n  } else if (!password_regex.test(password)) {\n    error = \"Invalid password. Provide a minimum four characters with at least one letter and one number!\"\n  }\n  return error;\n}\n//validate phone\nexport const validate_phone = (phone) => {\n  let error;\n  // Indian number starting from 6-9\n  const phone_regex = /^[6-9]\\d{9}$/\n  if (!phone) {\n    error = \"Phone required!\"\n  } else if (!phone_regex.test(phone)) {\n    error = \"Provide a valid mobile number!\"\n  }\n\n  return error;\n}\n//validate usertype\nexport const validate_user_type = (user_type) => {\n  let error;\n  if (!user_type) {\n    error = \"User type required!\"\n  }\n  return error;\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,SAASC,MAAT,GAAkB;EACvBD,KAAK,CAACE,IAAN,CAAW,aAAX,EACGC,IADH,CACQ,UAAAC,IAAI,EAAI;IACZC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAL,CAAUC,MAAtB;IACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB;EACD,CAJH,WAKS,UAAAC,GAAG,EAAI;IACZP,OAAO,CAACC,GAAR,CAAYM,GAAZ;EACD,CAPH;AAQD,C,CAED;;AACA,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;EAEvC,IAAIC,KAAK,GAAGD,OAAO,CAACE,QAAR,KAAqB,CAAjC;EACA,IAAIC,GAAG,GAAGH,OAAO,CAACI,OAAR,EAAV;EACA,IAAIC,IAAI,GAAGL,OAAO,CAACM,WAAR,EAAX;EAEA,OAAO,CAACD,IAAD,EAAOJ,KAAP,EAAcE,GAAd,EAAmBI,IAAnB,CAAwB,GAAxB,CAAP;AACD,C,CAED;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;EACrC,IAAIC,KAAJ,CADqC,CAErC;;EACA,IAAMC,UAAU,GAAG,cAAnB;;EACA,IAAI,CAACF,IAAL,EAAW;IACTC,KAAK,GAAG,gBAAR;EACD,CAFD,MAEO,IAAI,CAACC,UAAU,CAACC,IAAX,CAAgBH,IAAhB,CAAL,EAA4B;IACjCC,KAAK,GAAG,4BAAR;EACD;;EACD,OAAOA,KAAP;AACD,CAVM,C,CAWP;;AACA,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;EACvC,IAAIJ,KAAJ;EACA,IAAMK,WAAW,GAAG,+CAApB;;EACA,IAAI,CAACD,KAAL,EAAY;IACVJ,KAAK,GAAG,iBAAR;EACD,CAFD,MAEO,IAAI,CAACK,WAAW,CAACH,IAAZ,CAAiBE,KAAjB,CAAL,EAA8B;IACnCJ,KAAK,GAAG,sBAAR;EACD;;EACD,OAAOA,KAAP;AACD,CATM,C,CAUP;;AACA,OAAO,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAc;EAC7C,IAAIP,KAAJ,CAD6C,CAE7C;;EACA,IAAMQ,cAAc,GAAG,wCAAvB;;EACA,IAAI,CAACD,QAAL,EAAe;IACbP,KAAK,GAAG,oBAAR;EACD,CAFD,MAEO,IAAI,CAACQ,cAAc,CAACN,IAAf,CAAoBK,QAApB,CAAL,EAAoC;IACzCP,KAAK,GAAG,8FAAR;EACD;;EACD,OAAOA,KAAP;AACD,CAVM,C,CAWP;;AACA,OAAO,IAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;EACvC,IAAIV,KAAJ,CADuC,CAEvC;;EACA,IAAMW,WAAW,GAAG,cAApB;;EACA,IAAI,CAACD,KAAL,EAAY;IACVV,KAAK,GAAG,iBAAR;EACD,CAFD,MAEO,IAAI,CAACW,WAAW,CAACT,IAAZ,CAAiBQ,KAAjB,CAAL,EAA8B;IACnCV,KAAK,GAAG,gCAAR;EACD;;EAED,OAAOA,KAAP;AACD,CAXM,C,CAYP;;AACA,OAAO,IAAMY,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD,EAAe;EAC/C,IAAIb,KAAJ;;EACA,IAAI,CAACa,SAAL,EAAgB;IACdb,KAAK,GAAG,qBAAR;EACD;;EACD,OAAOA,KAAP;AACD,CANM"},"metadata":{},"sourceType":"module"}