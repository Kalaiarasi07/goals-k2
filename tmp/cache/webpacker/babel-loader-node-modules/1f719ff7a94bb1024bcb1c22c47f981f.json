{"ast":null,"code":"//validate username\nexport var validate_name = function validate_name(name) {\n  var error; // alphanumeric with both cases\n\n  var name_regex = /^[a-z0-9\\s]+$/i;\n\n  if (!name) {\n    error = \"Name required!\";\n  } else if (!name_regex.test(name)) {\n    error = \"Name must be alphanumeric!\";\n  }\n\n  return error;\n}; //validate email\n\nexport var validate_email = function validate_email(email) {\n  var error;\n  var email_regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  if (!email) {\n    error = \"Email required!\";\n  } else if (!email_regex.test(email)) {\n    error = \"Provide valid email!\";\n  }\n\n  return error;\n}; //validate password\n\nexport var validate_password = function validate_password(password) {\n  var error; // Minimum four characters, at least one letter and one number\n\n  var password_regex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{5,}$/;\n\n  if (!password) {\n    error = \"Password required!\";\n  } else if (!password_regex.test(password)) {\n    error = \"Invalid password. Provide a minimum four characters with at least one letter and one number!\";\n  }\n\n  return error;\n}; // validate confirm_password\n\nexport var validate_confirm_password = function validate_confirm_password(password, confirm_password) {\n  var error;\n\n  if (password !== confirm_password) {\n    error = \"Passwords do not match!\";\n    return error;\n  }\n}; //validate phone\n\nexport var validate_phone = function validate_phone(phone) {\n  var error; // Indian number starting from 6-9\n\n  var phone_regex = /^[6-9]\\d{9}$/;\n\n  if (!phone) {\n    error = \"Phone required!\";\n  } else if (!phone_regex.test(phone)) {\n    error = \"Provide a valid mobile number!\";\n  }\n\n  return error;\n}; //validate usertype\n\nexport var validate_user_type = function validate_user_type(user_type) {\n  var error;\n\n  if (!user_type) {\n    error = \"User type required!\";\n  }\n\n  return error;\n};","map":{"version":3,"names":["validate_name","name","error","name_regex","test","validate_email","email","email_regex","validate_password","password","password_regex","validate_confirm_password","confirm_password","validate_phone","phone","phone_regex","validate_user_type","user_type"],"sources":["/home/user/MP/rrapp/app/javascript/components/shared/form_validations.js"],"sourcesContent":["//validate username\nexport const validate_name = (name) => {\n  let error;\n  // alphanumeric with both cases\n  const name_regex = /^[a-z0-9\\s]+$/i;\n  if (!name) {\n    error = \"Name required!\";\n  } else if (!name_regex.test(name)) {\n    error = \"Name must be alphanumeric!\";\n  }\n  return error;\n}\n//validate email\nexport const validate_email = (email) => {\n  let error;\n  const email_regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  if (!email) {\n    error = \"Email required!\";\n  } else if (!email_regex.test(email)) {\n    error = \"Provide valid email!\";\n  }\n  return error;\n}\n//validate password\nexport const validate_password = (password) => {\n  let error;\n  // Minimum four characters, at least one letter and one number\n  const password_regex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{5,}$/;\n  if (!password) {\n    error = \"Password required!\";\n  } else if (!password_regex.test(password)) {\n    error = \"Invalid password. Provide a minimum four characters with at least one letter and one number!\";\n  }\n  return error;\n}\n// validate confirm_password\nexport const validate_confirm_password = (password, confirm_password) => {\n  let error;\n  if (password !== confirm_password) {\n    error = \"Passwords do not match!\";\n    return error;\n  }\n}\n\n//validate phone\nexport const validate_phone = (phone) => {\n  let error;\n  // Indian number starting from 6-9\n  const phone_regex = /^[6-9]\\d{9}$/;\n  if (!phone) {\n    error = \"Phone required!\";\n  } else if (!phone_regex.test(phone)) {\n    error = \"Provide a valid mobile number!\";\n  }\n\n  return error;\n}\n//validate usertype\nexport const validate_user_type = (user_type) => {\n  let error;\n  if (!user_type) {\n    error = \"User type required!\";\n  }\n  return error;\n}"],"mappings":"AAAA;AACA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;EACrC,IAAIC,KAAJ,CADqC,CAErC;;EACA,IAAMC,UAAU,GAAG,gBAAnB;;EACA,IAAI,CAACF,IAAL,EAAW;IACTC,KAAK,GAAG,gBAAR;EACD,CAFD,MAEO,IAAI,CAACC,UAAU,CAACC,IAAX,CAAgBH,IAAhB,CAAL,EAA4B;IACjCC,KAAK,GAAG,4BAAR;EACD;;EACD,OAAOA,KAAP;AACD,CAVM,C,CAWP;;AACA,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;EACvC,IAAIJ,KAAJ;EACA,IAAMK,WAAW,GAAG,+CAApB;;EACA,IAAI,CAACD,KAAL,EAAY;IACVJ,KAAK,GAAG,iBAAR;EACD,CAFD,MAEO,IAAI,CAACK,WAAW,CAACH,IAAZ,CAAiBE,KAAjB,CAAL,EAA8B;IACnCJ,KAAK,GAAG,sBAAR;EACD;;EACD,OAAOA,KAAP;AACD,CATM,C,CAUP;;AACA,OAAO,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAc;EAC7C,IAAIP,KAAJ,CAD6C,CAE7C;;EACA,IAAMQ,cAAc,GAAG,wCAAvB;;EACA,IAAI,CAACD,QAAL,EAAe;IACbP,KAAK,GAAG,oBAAR;EACD,CAFD,MAEO,IAAI,CAACQ,cAAc,CAACN,IAAf,CAAoBK,QAApB,CAAL,EAAoC;IACzCP,KAAK,GAAG,8FAAR;EACD;;EACD,OAAOA,KAAP;AACD,CAVM,C,CAWP;;AACA,OAAO,IAAMS,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACF,QAAD,EAAWG,gBAAX,EAAgC;EACvE,IAAIV,KAAJ;;EACA,IAAIO,QAAQ,KAAKG,gBAAjB,EAAmC;IACjCV,KAAK,GAAG,yBAAR;IACA,OAAOA,KAAP;EACD;AACF,CANM,C,CAQP;;AACA,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;EACvC,IAAIZ,KAAJ,CADuC,CAEvC;;EACA,IAAMa,WAAW,GAAG,cAApB;;EACA,IAAI,CAACD,KAAL,EAAY;IACVZ,KAAK,GAAG,iBAAR;EACD,CAFD,MAEO,IAAI,CAACa,WAAW,CAACX,IAAZ,CAAiBU,KAAjB,CAAL,EAA8B;IACnCZ,KAAK,GAAG,gCAAR;EACD;;EAED,OAAOA,KAAP;AACD,CAXM,C,CAYP;;AACA,OAAO,IAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD,EAAe;EAC/C,IAAIf,KAAJ;;EACA,IAAI,CAACe,SAAL,EAAgB;IACdf,KAAK,GAAG,qBAAR;EACD;;EACD,OAAOA,KAAP;AACD,CANM"},"metadata":{},"sourceType":"module"}